{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["Input","styled","TextField","App","useState","Date","finishTime","setFinishTime","format","setFormat","useCountdown","countdown","formattedText","utils","DateFnsUtils","AppBar","position","Toolbar","Typography","variant","anchor","Container","DateTimePicker","value","onChange","ampm","label","fullWidth","event","target","multiline","rows","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSA+DA,IAAMA,EAAQC,YAAOC,IAAPD,CAAH,iDAIIE,EAtDf,WAAgB,IAAD,EACuBC,mBAAS,IAAIC,KAAK,KAAM,EAAG,KADlD,mBACNC,EADM,KACMC,EADN,OAEeH,mBAAS,uCAFxB,mBAENI,EAFM,KAEEC,EAFF,OAGwBC,YAAa,CAChDJ,aACAE,WAFMG,EAHK,EAGLA,UAAWC,EAHN,EAGMA,cAKnB,OACE,eAAC,IAAD,CAAyBC,MAAOC,IAAhC,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,OAAO,QAAhC,sCAKJ,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAOjB,EACPkB,SAAUjB,EACVkB,MAAM,EACNC,MAAM,gBACNC,WAAS,IAEX,cAACzB,EAAA,EAAD,CACEqB,MAAOf,EACPgB,SAAU,SAACI,GAAD,OAAWnB,EAAUmB,EAAMC,OAAON,QAC5CG,MAAM,kBACNC,WAAS,IAEX,cAAC3B,EAAD,CACEmB,QAAQ,WACRO,MAAM,iBACNH,MAAOX,EACPe,WAAS,IAEX,cAAC3B,EAAD,CACE8B,WAAS,EACTC,KAAM,EACNZ,QAAQ,WACRO,MAAM,mBACNH,MAAOS,KAAKC,UAAUtB,EAAW,KAAM,GACvCgB,WAAS,WC5CJO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30f2cb04.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useCountdown } from '@kfiros/react-countdown-hook';\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  AppBar,\n  Container,\n  TextField,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\nfunction App() {\n  const [finishTime, setFinishTime] = useState(new Date(2022, 2, 11));\n  const [format, setFormat] = useState('{h} hours, {m} minutes, {s} seconds');\n  const { countdown, formattedText } = useCountdown({\n    finishTime,\n    format,\n  });\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" anchor=\"start\">\n            react-countdown-hook\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <DateTimePicker\n          value={finishTime}\n          onChange={setFinishTime}\n          ampm={false}\n          label=\"Choose a date\"\n          fullWidth\n        />\n        <TextField\n          value={format}\n          onChange={(event) => setFormat(event.target.value)}\n          label=\"Choose a format\"\n          fullWidth\n        />\n        <Input\n          variant=\"outlined\"\n          label=\"Formatted text\"\n          value={formattedText}\n          fullWidth\n        />\n        <Input\n          multiline\n          rows={8}\n          variant=\"outlined\"\n          label=\"Countdown object\"\n          value={JSON.stringify(countdown, null, 4)}\n          fullWidth\n        />\n      </Container>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nconst Input = styled(TextField)`\n  margin-top: 20px;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}